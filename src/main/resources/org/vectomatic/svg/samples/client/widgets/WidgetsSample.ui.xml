<ui:UiBinder xmlns:ui='urn:ui:com.google.gwt.uibinder'
	xmlns:g='urn:import:com.google.gwt.user.client.ui'
	xmlns:svgui='urn:import:org.vectomatic.dom.svg.ui'>
	<ui:with field='resources' type='org.vectomatic.svg.samples.client.widgets.WidgetsSample.WidgetsSampleBundle' />
	<ui:with field='mainBundle' type='org.vectomatic.svg.samples.client.Main.MainBundle' />
	<ui:style>
	  /* CSS definitions for the suite images */
	  .hearts { position:absolute; left:0%; width:25%; height:100% }
	  .clubs { position:absolute; left:25%; width:25%; height:100% }
	  .diamonds { position:absolute; left:50%; width:25%; height:100% }
	  .spades { position:absolute; left:75%; width:25%; height:100% }
	  /* CSS definitions for the smiley SVG image*/
      .eye { fill:#0000ff;stroke:#000000;stroke-width:2.9000001; }
      .mouth { fill:#ff0000;fill-opacity:1;stroke:#000000;stroke-width:1px; }
      .instructions { font-style:italic; }
      
	  /* CSS definitions for the push button # 1*/
	  @external .btn-text, .btn-shape;
	  .btn1 {
	    font-family: Arial, Helvetica, sans-serif;
	    font-size: 40px;
	    font-style: normal;
	    font-weight: normal;
	    position:absolute;
	    width:50%;
	    height:50%;
	    top:0;
	    left:0;
	  }
	  .btn1-up {
	  }
	  .btn1-up .btn-text {
	    stroke: none;
	    fill: lightgreen;
	  }
	  .btn1-up .btn-shape {
	    stroke: lightgreen;
	    fill: green;
	    stroke-width: 3;
	  }
	  .btn1-up-disabled {
	    fill-opacity: 0.5;
	  }
	  .btn1-up-disabled .btn-text {
	    stroke: none;
	    fill: lightgreen;
	  }
	  .btn1-up-disabled .btn-shape {
	    stroke: lightgreen;
	    fill: green;
	    stroke-width: 3;
	  }
	  .btn1-down-hovering {
	  }
	  .btn1-down-hovering .btn-text {
	    stroke: none;
	    fill: green;
	  }
	  .btn1-down-hovering .btn-shape {
	    stroke: green;
	    fill: lightgreen;
	    stroke-width: 3;
	  }
	  
	  /* CSS definitions for the push button # 2*/
	  .btn2Panel {
	    position:absolute;
	    width:50%;
	    height:50%;
	    top:0;
	    right:0;
	  }
	  .btn2 {
	    font-family: Arial, Helvetica, sans-serif;
	    font-size: 40px;
	    font-style: normal;
	    font-weight: normal;
	    position:absolute;
	    width:100%;
	    height:90%;
	    top:0;
	    left:0;
	  }
	  .btn2-up {
	  }
	  .btn2-up .btn-text {
	    stroke: none;
	    fill: white;
	  }
	  .btn2-up .btn-shape {
	    stroke: gold;
	    fill: goldenrod;
	    stroke-width: 3;
	  }
	  .btn2-down-hovering {
	  }
	  .btn2-down-hovering .btn-text {
	    stroke: none;
	    fill: black;
	  }
	  .btn2-down-hovering .btn-shape {
	    stroke: goldenrod;
	    fill: gold;
	    stroke-width: 3;
	  }
	  

	  /* CSS definitions for the led toggle buttons*/
	  @external .gradient;
	  .led-up {
	    position:absolute;
	    width:25%;
	    height:50%;
	    top:50%;
	  }
	  .led-down {
	    position:absolute;
	    width:25%;
	    height:50%;
	    top:50%;
	  }
	  .led-up .gradient {
	    fill:url(#linearGradient1339);
	  }
	  .led-down .gradient {
	    fill:url(#linearGradient1339a);
	  }
	  .led1 {
	    left:25%;
	  }
	  .led2 {
	    left:50%;
	  }
	  .led3 {
	    left:75%;
	  }
	  
	  /* CSS definitions for the play/pause toggle button*/
	  @external .play, .pause;
	  .btn-play {
	    position:absolute;
	    width:25%;
	    height:50%;
	    top:50%;
	    left:0;
	  }
	  .btn-play .play {
	    visibility:visible;
	  }
	  .btn-play .pause {
	    visibility:hidden;
	  }
	  .btn-pause {
	    position:absolute;
	    width:25%;
	    height:50%;
	    top:50%;
	    left:0;
	  }
	  .btn-pause .play {
	    visibility:hidden;
	  }
	  .btn-pause .pause {
	    visibility:visible;
	  }
	  
	  .txtPanel {
	    position:absolute;
	    width:100%;
	    height:10%;
	    top:90%;
	    left:0;
	  }

    </ui:style>
	
	<g:TabLayoutPanel ui:field='tabPanel' barUnit='EM' barHeight='2'>
		<g:tab>
			<g:customHeader><g:Label styleName="{mainBundle.css.tab}">Widgets</g:Label></g:customHeader>
			<g:FlowPanel>
				<g:SimplePanel>
					<g:FlowPanel styleName="{mainBundle.css.sample}">
					    <g:LayoutPanel width="100%" height="100%">
					    <g:layer left="0" right="0" top="0" height="10%">
					    	<g:FlowPanel>
								<g:HTML><b>SVGImage</b></g:HTML>
								<g:Label styleName="{style.instructions}" text="Move the cursor over the images to generate mouseover and mouseout events. In the case of the smiley, notice you can bind event handlers to arbitrary SVG elements inside the SVGImage."/>
							</g:FlowPanel>
						</g:layer>
					    <g:layer left="0" width="50%" top="10%" height="40%">
					    	<g:FlowPanel>
							  <!-- SVGImage using SVG provided by an external resource -->
							  <svgui:SVGImage ui:field="hearts" resource="{resources.hearts}" classNameBaseVal="{style.hearts}"/>
							  <svgui:SVGImage ui:field="clubs" resource="{resources.clubs}" classNameBaseVal="{style.clubs}"/>
							  <svgui:SVGImage ui:field="diamonds" resource="{resources.diamonds}" classNameBaseVal="{style.diamonds}"/>
							  <svgui:SVGImage ui:field="spades" resource="{resources.spades}" classNameBaseVal="{style.spades}"/>
							</g:FlowPanel>
						</g:layer>
					    <g:layer right="0" width="50%" top="10%" height="40%">
							  <!-- SVGImage using SVG provided inline. Notice the bindings to internal elements -->
							  <svgui:SVGImage>
								<svg viewBox="80 190 140 130" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:svg="http://www.w3.org/2000/svg">
									<path d="m 208,146.86218 a 63,63.5 0 1 1 -126,0 63,63.5 0 1 1 126,0 z" style="fill:#ffff00;stroke:#000000;" transform="translate(3.9895924,108.83705)" />
									<g ui:field="eyes" transform="translate(10.960155,103.59114)">
										<path d="m 124,133.36218 c 0,4.97057 -4.02944,9 -9,9 -4.97056,0 -9,-4.02943 -9,-9 0,-4.97056 4.02944,-9 9,-9 4.97056,0 9,4.02944 9,9 z" class="{style.eye}" />
										<path d="m 124,133.36218 c 0,4.97057 -4.02944,9 -9,9 -4.97056,0 -9,-4.02943 -9,-9 0,-4.97056 4.02944,-9 9,-9 4.97056,0 9,4.02944 9,9 z" class="{style.eye}" transform="translate(44,0)" />
									</g>
									<path ui:field="mouth" d="m 118.88908,286.15612 5,10 10,5 30,0 10,-5 5,-10 -5,5 -10,5 -30,0 -10,-5 -5,-5 z" class="{style.mouth}" />
								</svg>
							  </svgui:SVGImage>
						</g:layer>
					    <g:layer left="0" right="0" top="50%" height="50%">
					    <g:FlowPanel>
					    <g:LayoutPanel width="100%" height="100%">
					    	<g:layer left="0" right="0" top="0" height="10%">
								<g:HTML><b>SVGPushButton and SVGToggleButton</b></g:HTML>
							</g:layer>
					    	<g:layer left="0" right="0" top="10%" height="90%">
							<g:FlowPanel>
							  <!-- SVGPushButton using SVG provided inline -->
							  <svgui:SVGPushButton ui:field="clickMeButton">
							    <svgui:element>
			                         <svg viewBox="0 0 200 60" width="200" height="60" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
			                           <rect class="btn-shape" x="3" y="3" width="194" height="54" rx="10" ry="10" />
			                           <text class="btn-text" x="16" y="43">Click me !</text>
			                         </svg>
			                       </svgui:element>
							    <svgui:upFace><svgui:styleChange classNames="{style.btn1} {style.btn1-up}"/></svgui:upFace>
							    <svgui:upDisabledFace><svgui:styleChange classNames="{style.btn1} {style.btn1-up-disabled}"/></svgui:upDisabledFace>
							    <svgui:downHoveringFace><svgui:styleChange classNames="{style.btn1} {style.btn1-down-hovering}"/></svgui:downHoveringFace>
							  </svgui:SVGPushButton>
							  <g:FlowPanel styleName="{style.btn2Panel}">
							  <svgui:SVGPushButton ui:field="holdMeDownButton" repeatDelay="300">
							    <svgui:element>
			                         <svg viewBox="0 0 290 60" width="290" height="60" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
			                           <rect class="btn-shape" x="3" y="3" width="284" height="54" rx="10" ry="10" />
			                           <text class="btn-text" x="16" y="43">Hold me down</text>
			                         </svg>
			                       </svgui:element>
							    <svgui:upFace><svgui:styleChange classNames="{style.btn2} {style.btn2-up}"/></svgui:upFace>
								<svgui:downHoveringFace><svgui:styleChange classNames="{style.btn2} {style.btn2-down-hovering}"/></svgui:downHoveringFace>
							  </svgui:SVGPushButton>
							  <svgui:SVGImage classNameBaseVal="{style.txtPanel}">
								<svg viewBox="0 0 150 30" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:svg="http://www.w3.org/2000/svg">
								<text x="0" y="20" style="font-family: Arial, Helvetica, sans-serif;font-size: 20px; font-style: normal;font-weight: bold;">Event count:<tspan ui:field="clickCount">0</tspan></text>
	    					  </svg>
							  </svgui:SVGImage>  
							  </g:FlowPanel>
							  <svgui:SVGToggleButton resource="{resources.playButton}">
							    <svgui:upFace><svgui:styleChange classNames="{style.btn-play}"/></svgui:upFace>
							    <svgui:downFace><svgui:styleChange classNames="{style.btn-pause}"/></svgui:downFace>
							  </svgui:SVGToggleButton>
							  <!-- SVGToggleButton using SVG provided by an external resource -->
							  <svgui:SVGToggleButton resource="{resources.led}">
							    <svgui:upFace><svgui:styleChange classNames="{style.led-up} {style.led1}"/></svgui:upFace>
							    <svgui:downFace><svgui:styleChange classNames="{style.led-down} {style.led1}"/></svgui:downFace>
							  </svgui:SVGToggleButton>
							  <svgui:SVGToggleButton resource="{resources.led}">
							    <svgui:upFace><svgui:styleChange classNames="{style.led-up} {style.led2}"/></svgui:upFace>
							    <svgui:downFace><svgui:styleChange classNames="{style.led-down} {style.led2}"/></svgui:downFace>
							  </svgui:SVGToggleButton>
							  <svgui:SVGToggleButton resource="{resources.led}" down="true">
							    <svgui:upFace><svgui:styleChange classNames="{style.led-up} {style.led3}"/></svgui:upFace>
							    <svgui:downFace><svgui:styleChange classNames="{style.led-down} {style.led3}"/></svgui:downFace>
							  </svgui:SVGToggleButton>
							</g:FlowPanel>
							</g:layer>
							</g:LayoutPanel>
							</g:FlowPanel>
						</g:layer>
						</g:LayoutPanel>			
					</g:FlowPanel>
				</g:SimplePanel>
			</g:FlowPanel>
		</g:tab>
	</g:TabLayoutPanel>
</ui:UiBinder>
